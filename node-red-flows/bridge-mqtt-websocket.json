[{"id":"d0bc32b0.303c3","type":"tab","label":"Bridge Mqtt-ZigBee-WS","disabled":false,"info":""},{"id":"1acb0ef9.162131","type":"mqtt in","z":"d0bc32b0.303c3","name":"","topic":"/zefiro/zigbee-mqtt-bridge/zigbee-rx/+","qos":"1","broker":"4e36a1e9.b4982","x":360,"y":160,"wires":[["de2a1249.5d07b"]]},{"id":"bd41dd91.6f2b5","type":"websocket out","z":"d0bc32b0.303c3","name":"","server":"5268425d.6c2d2c","client":"","x":750,"y":260,"wires":[]},{"id":"3077ef93.cbcbc","type":"websocket in","z":"d0bc32b0.303c3","name":"","server":"5268425d.6c2d2c","client":"","x":280,"y":320,"wires":[["82559e0a.01b43"]]},{"id":"b198a092.a73b3","type":"mqtt out","z":"d0bc32b0.303c3","name":"","topic":"","qos":"1","retain":"","broker":"4e36a1e9.b4982","x":750,"y":440,"wires":[]},{"id":"82559e0a.01b43","type":"function","z":"d0bc32b0.303c3","name":"Da WS a MQTT","func":"// WS:      1|LED=1 -> 0013a20040aded7d/LED=1 \n\n// Topic:   /zefiro/zigbee-mqtt-bridge/mqtt-rx/0013a20040aded7d\n// Payload: LED=1\n\nvar wsmsgparts=msg.payload.split('|');\nif (wsmsgparts.length<2) return null;\n\nvar xbeeaddr=\"\";\n\nswitch(wsmsgparts[0]) {\n    case \"1\":\n        xbeeaddr=\"0013a20040aded7d\";\n        break;\n    case \"2\":\n        xbeeaddr=\"0013a20040c5caa9\";\n        break;\n    case \"3\":\n        xbeeaddr=\"0013a20040ba9198\";\n        break;\n    case \"4\":\n        xbeeaddr=\"0013a20040c5cabe\";\n        break;\n}\n\nif(!xbeeaddr) return null;\n\nmsg={\n  topic: \"/zefiro/zigbee-mqtt-bridge/mqtt-rx/\" + xbeeaddr,\n  payload: wsmsgparts[1]\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":380,"wires":[["b198a092.a73b3","6a096843.a1ed08"]]},{"id":"6a096843.a1ed08","type":"debug","z":"d0bc32b0.303c3","name":"WS -> MQTT","active":true,"console":"false","complete":"payload","x":750,"y":340,"wires":[]},{"id":"de2a1249.5d07b","type":"function","z":"d0bc32b0.303c3","name":"Da MQTT a WS","func":"// Topic:   /zefiro/zigbee-mqtt-bridge/zigbee-rx/0013a20040aded7d\n// Payload: BTN=1\n\n// WS: 1|BTN=1\n\nvar topicParts=msg.topic.split('/');\nvar mqttPayload=msg.payload;\n\nnode.log(topicParts);\nnode.log(topicParts.length);\n\nif(topicParts.length<5) return null;\n\nvar nodeId=\"\";\n\nswitch(topicParts[3]) {\n    case \"zigbee-rx\":\n        switch(topicParts[4]) {\n            case \"0013a20040aded7d\":\n                nodeId=\"1\";\n                break;\n            case \"0013a20040c5caa9\":\n                nodeId=\"2\";\n                break;\n            case \"0013a20040ba9198\":\n                nodeId=\"3\";\n                break;\n            case \"0013a20040c5cabe\":\n                nodeId=\"4\";\n                break;\n        }\n        break;\n}\n\nif(!nodeId) return null;\n\nmsg={\n    topic: \"mqtt2ws-bridge\",\n    payload: nodeId + \"|\" + mqttPayload\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":520,"y":240,"wires":[["bd41dd91.6f2b5","a5aff2b.222191"]]},{"id":"a5aff2b.222191","type":"debug","z":"d0bc32b0.303c3","name":"MQTT -> WS","active":true,"console":"false","complete":"payload","x":750,"y":160,"wires":[]},{"id":"4e36a1e9.b4982","type":"mqtt-broker","z":"","broker":"ws.mqtt.it","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"5268425d.6c2d2c","type":"websocket-listener","z":"","path":"/ws/bridge","wholemsg":"false"}]